name    = SemanticWeb-Schema
author  = Robert Rothenberg <rrwo@cpan.org>
license = Artistic_2_0
copyright_holder = Robert Rothenberg
copyright_year   = 2018-2024

[Meta::Contributors]
contributor =  Mathias Reitinger <reitinger@cpan.org>

[Keywords]
keyword = semantic web
keyword = JSON-LD

[GatherDir]
exclude_match = cpanfile*
exclude_filename = MANIFEST.SKIP
[PruneCruft]
[CPANFile]
[License]
[ExtraTests]
[ExecDir]
[ShareDir]
[MakeMaker]
[Manifest]
[TestRelease]
[ConfirmRelease]
[Signature]
[UploadToCPAN]

[RecommendedPrereqs]
[AutoPrereqs]

[EnsurePrereqsInstalled]
:version = 0.003
type = requires
type = recommends

[GitHub::Meta]
repo = git@github.com:robrwo/SemanticWeb-Schema.git

[PodWeaver]
[ReadmeAnyFromPod]
type     = gfm
filename = README.md
location = build

[CopyFilesFromBuild]
copy = README.md
copy = cpanfile
copy = MANIFEST.SKIP

[Generate::ManifestSkip]
:version = v0.1.4
add = lib/SemanticWeb/Schema/CssSelectorType.pm
add = lib/SemanticWeb/Schema/DataType.pm
add = lib/SemanticWeb/Schema/Float.pm
add = lib/SemanticWeb/Schema/Integer.pm
add = lib/SemanticWeb/Schema/MedicalCode.pm
add = lib/SemanticWeb/Schema/PronounceableText.pm
add = lib/SemanticWeb/Schema/Text.pm
add = lib/SemanticWeb/Schema/TextDigitalDocument.pm
add = lib/SemanticWeb/Schema/URL.pm
add = lib/SemanticWeb/Schema/XPathType.pm
add = cache/

[PruneFiles]
match = ~$

[Metadata]
x_authority    = cpan:RRWO

[MetaProvides::Package]
[MetaJSON]
[MetaYAML]

[InstallGuide]

[Prereqs]
List::Util    = 1.33
MooX::Role::JSON_LD = 0.0.16

[Prereqs / develop]
-phase = develop
Test::Compile = 0

; authordep Pod::Weaver::Plugin::AppendPrepend
; authordep Pod::Weaver::Section::Contributors
; authordep Pod::Weaver::Section::SourceGitHub

[PodSyntaxTests]
[Test::CheckManifest]
[Test::CleanNamespaces]
[Test::EOF]
;;[Test::EOL]
;;:version = 0.14
[Test::Fixme]
[Test::MinimumVersion]
;;[Test::NoTabs]
;;[Test::Perl::Critic]
;;critic_config = t/etc/perlcritic.rc

;;[Test::Pod::Coverage::Configurable]
;;[Test::Pod::LinkCheck]
[Test::Portability]
; authordep Test::TrailingSpace
;;[Test::TrailingSpace]
filename_regex = \.(?:p[lm]|pod)\z
;;[Test::Kwalitee]
;;skiptest = use_strict
[Test::ReportPrereqs]
:version = 0.022
version_extractor = Module::Metadata
verify_prereqs = 1

[@Git]
allow_dirty = dist.ini
push_to     = origin master:master
tag_format  = %v
commit_msg  = %v%n%n%c

[Git::Contributors]
:version = 0.019

[RewriteVersion]
[NextRelease]
[BumpVersionAfterRelease]

[Git::Commit / Commit_Changes] ; commit Changes (for new dev)
allow_dirty_match = ^lib/
commit_msg = Commit Changes and bump $VERSION
